function init(self)

	can_use_cursor(self, false)

	self.collision_id = nil
end

function update(self, dt)
	self.collision_id = nil
end

function on_message(self, message_id, message, sender)

	if message_id == hash("collision_response") then
		if not self.collision_id or go.get_position(self.collision_id).z < message.other_position.z then
			self.collision_id = message.other_id
		end
	elseif message_id == hash("game_finished") then
		can_use_cursor(self, false)
	elseif message_id == hash("start") then
		can_use_cursor(self, true)
	end
end

function on_input(self, action_id, action)

	if not action_id or action_id == hash("touch") or action_id == hash("click") then

		local action_pos = vmath.vector3(action.x, action.y, 0)
		go.set_position(action_pos)

		if action.pressed then
			msg.post("#collisionobject", "enable")

		elseif action.released and self.collision_id then
			msg.post("#collisionobject", "disable")
			msg.post(self.collision_id, "open_circle")
		end

		--if self.dragged_id and vmath.length(self.dragged_pos - action_pos) > 20 then
		--	self.dragging = true
		--end

		--if self.dragging then
		--	go.set_position(action_pos, self.dragged_id)
		--end
	end
end

function can_use_cursor(self, canUse)
	if canUse then
		msg.post(".", "acquire_input_focus")
		
	else
		msg.post(".", "release_input_focus")
	end
end